apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-server
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-server
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-server
    spec:
      containers:
      - name: server
        image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.env.APP_SERVER_PORT }}
        env:
        - name: APP_SERVER_PORT
          value: "{{ .Values.env.APP_SERVER_PORT }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-client
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-client
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-client
    spec:
      containers:
      - name: client
        image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}"
        imagePullPolicy: {{ .Values.client.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.env.REACT_APP_PORT }}
        env:
        - name: REACT_APP_API_URL
          value: "{{ .Values.env.REACT_APP_API_URL }}"
        - name: REACT_APP_BACKEND_SERVER
          value: "{{ .Values.env.REACT_APP_BACKEND_SERVER }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mongo
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mongo
    spec:
      containers:
      - name: mongo
        image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag }}"
        imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "{{ .Values.mongo.environment.MONGO_INITDB_ROOT_USERNAME }}"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "{{ .Values.mongo.environment.MONGO_INITDB_ROOT_PASSWORD }}"
        - name: MONGO_INITDB_DATABASE
          value: "{{ .Values.mongo.environment.MONGO_INITDB_DATABASE }}"
        volumeMounts:
        - name: mongodata
          mountPath: /data/db
      volumes:
      - name: mongodata
        emptyDir: {}
